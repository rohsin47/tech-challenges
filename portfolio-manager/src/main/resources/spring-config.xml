<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:context="http://www.springframework.org/schema/context"
	xmlns:tx="http://www.springframework.org/schema/tx"
	xmlns:jdbc="http://www.springframework.org/schema/jdbc"
	xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd
						http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context.xsd
						http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx.xsd
						http://www.springframework.org/schema/jdbc http://www.springframework.org/schema/jdbc/spring-jdbc.xsd">
	<!-- Support annotation -->
	<context:annotation-config />
	<!-- support annotation transaction -->
	<tx:annotation-driven transaction-manager="txManager" />
	
	<jdbc:embedded-database id="dataSource"	type="H2">
		<jdbc:script location="classpath:data/create-table.sql" />
		<jdbc:script location="classpath:data/insert-data.sql" />
	</jdbc:embedded-database>
	
	<bean id="txManager" class="org.springframework.jdbc.datasource.DataSourceTransactionManager">
		<property name="dataSource" ref="dataSource" />
	</bean>
	
	<!-- spring jdbc template -->
	<bean id="jdbcTemplate" class="org.springframework.jdbc.core.JdbcTemplate">
		<property name="dataSource" ref="dataSource"></property>
	</bean>
	
	<!-- service -->
	<bean id="assetService" class="com.crypto.app.service.impl.AssetService" />
	<bean id="marketDataService" class="com.crypto.app.service.impl.PriceService" />
	<bean id="posService" class="com.crypto.app.service.impl.PositionService" />
	
	<!-- listeners -->
	<bean id="priceEventListener" class="com.crypto.app.price.PriceEventListener" />
	<bean id="portfolioEventListener" class="com.crypto.app.portfolio.PortfolioEventListener" />
	
	<!-- components -->
	<bean id="eventDispatcher" class="com.crypto.app.event.EventHandler" />
	<bean id="priceGenerator" class="com.crypto.app.price.PriceGenerator" />
	
	<!-- dao -->
	<bean id="assetDao"  class="com.crypto.app.dao.AssetDao" />
</beans>
